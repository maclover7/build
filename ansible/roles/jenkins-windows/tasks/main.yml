---

##########

# VCBT2015
- name: VCBT2015 | Download .NET Framework Setup
  win_get_url:
    url: 'http://go.microsoft.com/fwlink/?LinkId=671743'
    dest: 'C:\TEMP\netfw.exe'
  when: '"vcbt2015" in vs_version'

- name: VCBT2015 | Install .NET Framework
  raw: 'C:\TEMP\netfw.exe /q /norestart
        /log C:\TEMP\netfw_install_log.txt'
  when: '"vcbt2015" in vs_version'

- name: VCBT2015 | Download Visual C++ Build Tools 2015 Setup
  win_get_url:
    url: 'https://go.microsoft.com/fwlink/?LinkId=691126'
    dest: 'C:\TEMP\vcbt2015.exe'
  when: '"vcbt2015" in vs_version'

- name: VCBT2015 | Install Visual C++ Build Tools 2015
  raw: 'C:\TEMP\vcbt2015.exe /Silent /NoRestart
        /Full
        /Log C:\TEMP\vsbt2015_install_log.txt'
  when: '"vcbt2015" in vs_version'

# VS2013
- name: VS2013 | Download Visual Studio Community 2013 Setup
  win_get_url:
    url: 'https://go.microsoft.com/fwlink/?LinkId=532495'
    dest: 'C:\TEMP\vs2013_community.exe'
  when: '"vs2013" in vs_version'

- name: VS2013 | Install Visual Studio Community 2013
  raw: 'C:\TEMP\vs2013_community.exe /Silent /NoRestart
        /Log C:\TEMP\vs2013_install_log.txt'
  when: '"vs2013" in vs_version'

# VS2015
- name: VS2015 | Download Visual Studio Community 2015 Setup
  win_get_url:
    url: 'https://go.microsoft.com/fwlink/?LinkId=532606'
    dest: 'C:\TEMP\vs_community.exe'
  when: '"vs2015" in vs_version'

- name: VS2015 | Install Visual Studio Community 2015
  raw: 'C:\TEMP\vs_community.exe /Silent /NoRestart
        /InstallSelectableItems NativeLanguageSupport_Group
        /Log C:\TEMP\vs2015_install_log.txt'
  when: '"vs2015" in vs_version'
##########

- name: Reboot machine after installation
  win_reboot:

- name: Create C:\TEMP directory
  win_file:
    path: 'C:\TEMP'
    state: directory

#- name: Python | Download Python 2 MSI
  #win_get_url:
    #url: 'https://www.python.org/ftp/python/2.7.10/python-2.7.10.amd64.msi'
    #dest: 'C:\TEMP\python.msi'

#- name: Python | Install Python 2
  ## ADDLOCAL=ALL means install all features, including appending python to the path
  #raw: 'msiexec /i C:\TEMP\python.msi /qn ADDLOCAL=ALL
        #/l*v C:\TEMP\python_install_log.txt'

#- name: Java | Download Java 8
  #win_get_url:
    #url: 'http://javadl.sun.com/webapps/download/AutoDL?BundleId=109708'
    #dest: 'C:\TEMP\java.exe'

#- name: Java | Install Java 8
  #raw: 'C:\TEMP\java.exe /s SPONSORS=0 /l*v C:\TEMP\java_install_log.txt'

#- name: Git | Download Git
  #win_get_url:
    #url: 'https://github.com/git-for-windows/git/releases/download/v2.14.1.windows.1/Git-2.14.1-64-bit.exe'
    #dest: 'C:\TEMP\git.exe'

#- name: Git | Stat Downloaded Git
  #win_stat:
    #path: 'C:\TEMP\git.exe'
    #get_checksum: yes
    #checksum_algorithm: sha256
  #register: git_stat

#- name: Git | Fail if downloaded Git checksum is not correct
  #fail:
    #msg: "Downloaded Git checksum is not correct"
  #when: git_stat.stat.checksum != '0dc556503e3ce4699228fc910a8e4a8d81172635ac8e8e16a11be107254c4901'

#- name: Git | Copy Git Install Configuration
  #win_copy:
    #src: './resources/git_conf.inf'
    #dest: 'C:\TEMP\git_conf.inf'

#- name: Git | Install Git
  #raw: 'C:\TEMP\git.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART
        #/LOADINF=C:\TEMP\git_conf.inf /LOG=C:\TEMP\git_install_log.txt
        #/SAVEINF=C:\TEMP\git_install_log_inf.inf'

#- name: Git | Enable long paths
  #raw: 'git config --global core.longpaths true'

#- name: GYP | Check if GYP is already cloned
  #win_stat:
    #path: 'C:\gyp'
  #register: gyp_stat

#- name: GYP | Clone GYP repository
  ## Necessary for libuv test job
  #raw: 'git clone https://chromium.googlesource.com/external/gyp C:\gyp'
  #when: not gyp_stat.stat.exists

#- name: Create C:\node-icu directory
  #win_file:
    #path: 'C:\\node-icu'
    #state: directory

#- name: ICU | Download ICU2C 54 zip
  #win_get_url:
    #url: 'http://download.icu-project.org/files/icu4c/54.1/icu4c-54_1-src.zip'
    #dest: 'C:\node-icu\icu4c-54_1-src.zip'

#- name: ICU | Download ICU2C 55 zip
  #win_get_url:
    #url: 'http://download.icu-project.org/files/icu4c/55.1/icu4c-55_1-src.zip'
    #dest: 'C:\node-icu\icu4c-55_1-src.zip'

#- name: ICU | Download ICU2C 56 zip
  #win_get_url:
    #url: 'http://download.icu-project.org/files/icu4c/56.1/icu4c-56_1-src.zip'
    #dest: 'C:\node-icu\icu4c-56_1-src.zip'

#- name: Jenkins | Download Jenkins Icon
  #win_get_url:
    #url: 'http://mirrors.jenkins-ci.org/art/jenkins-logo/favicon.ico'
    #dest: 'C:\jenkins.ico'

#- name: Jenkins | Create jenkins.bat
  #win_template:
    #src: './resources/jenkins.bat'
    #dest: 'C:\jenkins.bat'

#- name: Jenkins | Create Jenkins Shortcuts
  #script: './resources/Jenkins-Shortcuts.ps1'

#- name: Automatic Logon | Setup Automatic Logon
  #script: "./resources/Enable-Autologon.ps1 -UserName {{ ansible_ssh_user }} -Password {{ ansible_ssh_pass }}"

#- name: Reboot Machine
  #win_reboot:
